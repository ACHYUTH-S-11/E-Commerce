server.port=8020
spring.application.name=api-gateway

# Eureka configuration
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

# Unique name registration with Eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Enable service discovery for Spring Cloud Gateway
spring.cloud.gateway.discovery.locator.enabled=true
#lower case
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#customize the route for product service
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://ecom-product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/products/**
# spring.cloud.gateway.routes[0].filters[0]=RewritePath=/product-service/(?<segment>.*), /$\{segment}
#customize the route for cart service
spring.cloud.gateway.routes[1].id=cart-service
spring.cloud.gateway.routes[1].uri=lb://ecom-cart-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/cart/**
# spring.cloud.gateway.routes[1].filters[0]=RewritePath=/cart-service/(?<segment>.*), /$\{segment}

#customize the route for order service
spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://ecom-order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/order/**
# spring.cloud.gateway.routes[2].filters[0]=RewritePath=/order-service/(?<segment>.*), /$\{segment}

# Route for user service (auth endpoints)
spring.cloud.gateway.routes[3].id=user-service
spring.cloud.gateway.routes[3].uri=lb://ecom-user-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/auth/**
# CORS configuration for auth endpoints
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/auth/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/auth/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/auth/**].allowed-headers=*

# CORS configuration for cart service
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/cart/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/cart/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/cart/**].allowed-headers=*
# CORS configuration for product service
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/products/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/products/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/products/**].allowed-headers=*
# CORS configuration for order service
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/order/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/order/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/order/**].allowed-headers=*

logging.level.org.springframework.cloud.gateway=DEBUG

jwt.secret=myverysecureandlongsecretkey1234567890